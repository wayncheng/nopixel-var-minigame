{"version":3,"sources":["App.js","index.js"],"names":["gsap","defaults","ease","duration","App","props","componentDidMount","setState","count","generateItinerary","$bound","document","getElementById","$tile","boundX","offsetWidth","boundY","offsetHeight","limitX","limitY","maxDuration","minDuration","itinerary","i","cfg","generateDestination","push","start","totalDuration","map","reduce","a","b","data","config","x","Math","round","random","y","utils","setItinerary","state","target","tl","timeline","autoRemoveChildren","repeat","yoyo","set","j","length","to","stage","status","failed","passed","index","handleTileClick","event","preventDefault","number","parseInt","textContent","console","log","handleStartClick","countdown","setTimeout","learnDuration","handleCountChange","value","reset","clearTimeout","globalTimeline","progress","debug","getChildren","render","id","className","classNames","Array","fill","num","onClick","correct","hidden","Fragment","type","toggleExperimental","title","showExperimental","handleResume","handlePause","htmlFor","name","onChange","pause","resume","Component","defaultProps","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7cb68f8e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport gsap from 'gsap';\nimport classNames from 'classnames';\n\ngsap.defaults({\n\tease: \"none\",\n\tduration: 3,\n});\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tindex: 1,\n\t\t\tfailed: false,\n\t\t\tpassed: false,\n\t\t\tstage: 'pregame', // learning, playing, postgame\n\t\t\tstatus: '',\n\t\t\tcount: 6,\n\t\t\tcountdown: null, // setTimeout for hiding numbers after some time\n\t\t\tshowExperimental: false,\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\t// for (let i = 1; i <= this.props.count; i++) {\n\t\t// \tthis.setItinerary(`#tile-${i}`);\n\t\t// }\n\t\tthis.setState({\n\t\t\tcount: this.props.count,\n\t\t});\n\t};\n\n\tgenerateItinerary = () => {\n\t\tconst $bound = document.getElementById('boundary');\n\t\tconst $tile = document.getElementById('tile-1');\n\n\t\tconst boundX = $bound.offsetWidth;\n\t\tconst boundY = $bound.offsetHeight;\n\t\tconst tileX = $tile.offsetWidth;\n\t\tconst tileY = $tile.offsetHeight;\n\t\tconst limitX = boundX - tileX;\n\t\tconst limitY = boundY - tileY;\n\n\t\tconst {\n\t\t\tmaxDuration,\n\t\t\tminDuration,\n\t\t} = this.props;\n\n\t\tconst itinerary = [];\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst cfg = this.generateDestination(limitX, limitY, minDuration, maxDuration);\n\t\t\titinerary.push(cfg);\n\t\t}\n\n\t\t// Starting point\n\t\tconst start = this.generateDestination(limitX, limitY, minDuration, maxDuration);\n\n\t\tconst totalDuration = itinerary.map(cfg => cfg.duration).reduce((a, b) => a + b);\n\n\t\tconst output = {\n\t\t\tdata: itinerary,\n\t\t\tstart,\n\t\t\ttotalDuration,\n\t\t};\n\t\t// console.log('output:', output);\n\n\t\treturn output;\n\t};\n\n\tgenerateDestination = (limitX, limitY, minDuration = 3, maxDuration = 5) => {\n\t\tconst config = {\n\t\t\tx: Math.round(limitX * Math.random()),\n\t\t\ty: Math.round(limitY * Math.random()),\n\t\t\tduration: gsap.utils.random(minDuration, maxDuration, 1),\n\t\t};\n\t\treturn config;\n\t};\n\n\tsetItinerary = () => {\n\t\t// For each number, generate animations then add each animations to the timeline\n\t\tfor (let i = 1; i <= this.state.count; i++) {\n\t\t\t// Selector for the tile we are animating\n\t\t\tconst target = `#tile-${i}`;\n\n\t\t\t// Create a timeline for each tile\n\t\t\tconst tl = gsap.timeline({\n\t\t\t\tautoRemoveChildren: true,\n\t\t\t\trepeat: 3,\n\t\t\t\tyoyo: true,\n\t\t\t});\n\n\t\t\t// Generate a randomized path and starting point for each tile\n\t\t\tconst itinerary = this.generateItinerary();\n\t\t\tconst { data, start } = itinerary;\n\n\t\t\t// Move the tile to starting point (to avoid having them start bunched in a corner)\n\t\t\tgsap.set(target, start);\n\t\t\t// // Hide number after some delay\n\t\t\t// gsap.set(target, { color: 'transparent', delay: 2 });\n\n\t\t\t// Add all animation steps in the itinerary to the timeline\n\t\t\tfor (let j = 0; j < data.length; j++) {\n\t\t\t\ttl.to(target, data[j]);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tstage: 'learning',\n\t\t\tstatus: '',\n\t\t\tfailed: false,\n\t\t\tpassed: false,\n\t\t\tindex: 1,\n\t\t});\n\n\t};\n\n\n\thandleTileClick = event => {\n\t\tevent.preventDefault();\n\t\tconst target = event.target;\n\t\tconst number = parseInt(target.textContent);\n\t\tif (this.state.stage !== 'postgame') {\n\n\t\t\tif (number === this.state.index && number < this.state.count) {\n\t\t\t\tconsole.log('Correct');\n\t\t\t\tthis.setState({\n\t\t\t\t\tindex: this.state.index + 1\n\t\t\t\t});\n\t\t\t} else if (number === this.state.index && number === this.state.count) {\n\t\t\t\tconsole.log('Finished!');\n\t\t\t\tthis.setState({\n\t\t\t\t\tpassed: true,\n\t\t\t\t\tstage: 'postgame',\n\t\t\t\t\tstatus: 'Passed'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('Wrong');\n\t\t\t\tthis.setState({\n\t\t\t\t\tfailed: true,\n\t\t\t\t\tstage: 'postgame',\n\t\t\t\t\tstatus: 'Failed'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\thandleStartClick = event => {\n\t\tevent.preventDefault();\n\n\t\tthis.setItinerary();\n\n\t\t// Hide numbers after a few seconds\n\t\tconst countdown = setTimeout(() => {\n\t\t\tthis.setState({ stage: 'playing' });\n\t\t}, this.props.learnDuration * 1000);\n\n\t\tthis.setState({\n\t\t\tcountdown,\n\t\t});\n\t};\n\n\thandleCountChange = event => {\n\t\tevent.preventDefault();\n\t\tconst { value } = event.target;\n\t\tthis.reset();\n\t\tthis.setState({\n\t\t\tcount: parseInt(value),\n\t\t});\n\t};\n\n\treset = () => {\n\t\tconsole.log('=== RESET GAME ==>');\n\n\t\tif (this.state.countdown !== null) {\n\t\t\tclearTimeout(this.state.countdown);\n\t\t}\n\n\t\t// Clear state values\n\t\tthis.setState({\n\t\t\tstage: 'pregame',\n\t\t\tstatus: '',\n\t\t\tfailed: false,\n\t\t\tpassed: false,\n\t\t\tindex: 1,\n\t\t\tcountdown: null,\n\t\t});\n\n\t\t// Remove all animation timelines by setting the progress to the end of the timelines.\n\t\t// | Note: Tried using other gsap functions specifically for killing timelines/tweens, \n\t\t// | but they didn't work for me. This workaround seems to do the job.\n\t\tgsap.globalTimeline.progress(1);\n\n\t\tconsole.debug('globalTL children:', gsap.globalTimeline.getChildren());\n\t};\n\n\trender = () => {\n\n\t\treturn (\n\t\t\t<div id=\"app\" className={classNames(\"app\", {\n\t\t\t\t'is-playing': this.state.stage === 'playing',\n\t\t\t\t'is-learning': this.state.stage === 'learning',\n\t\t\t})}>\n\t\t\t\t<main className=\"container\">\n\n\t\t\t\t\t<div id=\"boundary\" className=\"boundary\">\n\t\t\t\t\t\t{Array(this.state.count).fill('😎').map((x, i) => {\n\t\t\t\t\t\t\tconst num = i + 1;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={`tile-${num}`}\n\t\t\t\t\t\t\t\t\tonClick={this.handleTileClick}\n\t\t\t\t\t\t\t\t\tkey={num}\n\t\t\t\t\t\t\t\t\tclassName={classNames(\"tile\", {\n\t\t\t\t\t\t\t\t\t\tcorrect: num < this.state.index || this.state.passed === true,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{num}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t{/* Overlays =============================================================*/}\n\t\t\t\t\t\t<div className={classNames(\"overlay\", {\n\t\t\t\t\t\t\thidden: this.state.stage !== 'pregame' && this.state.stage !== 'postgame'\n\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<div className=\"marquee\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-user-secret\"></i>\n\t\t\t\t\t\t\t\t{/* Show result if post-game */}\n\t\t\t\t\t\t\t\t{(this.state.stage === 'postgame' && this.state.status !== '') && (\n\t\t\t\t\t\t\t\t\t// <React.Fragment>\n\t\t\t\t\t\t\t\t\t<h2>{this.state.passed === true ? `Security Clearance Accepted` : `Failed Security Clearance`}</h2>\n\t\t\t\t\t\t\t\t\t// </React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{/* Show VR Icon if pre-game */}\n\t\t\t\t\t\t\t\t{this.state.stage === 'pregame' && (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t{/* <i className=\"fas fa-user-secret\"></i> */}\n\t\t\t\t\t\t\t\t\t\t<h2>Finger Print Not Recognized</h2>\n\t\t\t\t\t\t\t\t\t\t<p>Proof of Training Required</p>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tid='start'\n\t\t\t\t\t\t\t\tclassName='btn start-btn'\n\t\t\t\t\t\t\t\tonClick={this.handleStartClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPlay VAR\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t{/* Toolbar for Options and Controls ========================================*/}\n\t\t\t\t\t<aside id='controls' className='toolbar'>\n\t\t\t\t\t\t<div className=\"control-group test-group\">\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"btn btn-blank\" \n\t\t\t\t\t\t\tid=\"toggle-exp\" \n\t\t\t\t\t\t\tonClick={this.toggleExperimental}\n\t\t\t\t\t\t\t\ttitle='Experimental features that could be unstable'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-flask\"></i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className={classNames(\"control-group playback-group\", { hidden: !this.state.showExperimental })}>\n\t\t\t\t\t\t\t{/* <div className={\"control-group playback-group\"}> */}\n\t\t\t\t\t\t\t\t<button id=\"resume\" className='btn btn-blank' onClick={this.handleResume}>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-play\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button id=\"pause\" className='btn btn-blank' onClick={this.handlePause}>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-pause\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"control-group count-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"count\">Number of Tiles</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tname=\"count\"\n\t\t\t\t\t\t\t\tid=\"count\"\n\t\t\t\t\t\t\t\tvalue={this.state.count}\n\t\t\t\t\t\t\t\tonChange={this.handleCountChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</aside>\n\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t};\n\n\n\ttoggleExperimental = event => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tshowExperimental: !this.state.showExperimental,\n\t\t});\n\t};\n\thandlePause = event => {\n\t\tevent.preventDefault();\n\t\tgsap.globalTimeline.pause();\n\t};\n\thandleResume = event => {\n\t\tevent.preventDefault();\n\t\tgsap.globalTimeline.resume();\n\t};\n}\n\nexport default App;\n\nApp.defaultProps = {\n\tcount: 6,\n\tmaxDuration: 4,\n\tminDuration: 2,\n\tlearnDuration: 3,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}